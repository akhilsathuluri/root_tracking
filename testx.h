#include <iostream>
#include <Eigen/Dense>

using namespace Eigen;

VectorXd eta(VectorXd qvals);
MatrixXd Jetaphi(VectorXd qvals);
MatrixXd Jetatheta(VectorXd qvals);


VectorXd eta(VectorXd qvals){
  double rb=1.00, rt=5803.00/10000.00, gt =6573.00/10000.00, gb= 597.00/2000.00;
  double x=qvals(0),y=qvals(1),z=qvals(2),c1=qvals(3),c2=qvals(4),c3=qvals(5),l1=qvals(6),l2=qvals(7),l3=qvals(8),l4=qvals(9),l5=qvals(10),l6=qvals(11);
  // double l1=1.00575, l2=1.20209, l3=1.47276, l4=1.47276, l5=1.20209, l6=1.00575;
  VectorXd etaval(6);
  etaval << rt*x*cos(gt) + 2*c1*c2*rt*y*cos(gt) + 2*c3*rt*y*cos(gt) - 2*c2*rt*z*cos(gt) + 2*c1*c3*rt*z*cos(gt) + 2*c1*c2*rt*x*cos(gt)*pow(3,0.5) - 2*c3*rt*x*cos(gt)*pow(3,0.5) + rt*y*cos(gt)*pow(3,0.5) + 2*c1*rt*z*cos(gt)*pow(3,0.5) + 2*c2*c3*rt*z*cos(gt)*pow(3,0.5) - 2*c1*c2*rb*rt*cos(gb + gt)*pow(3,0.5) + rt*x*cos(gt)*pow(c1,2) + rb*rt*cos(gb + gt)*pow(c1,2) - rt*y*cos(gt)*pow(3,0.5)*pow(c1,2) - rt*x*cos(gt)*pow(c2,2) - rb*rt*cos(gb + gt)*pow(c2,2) + rt*y*cos(gt)*pow(3,0.5)*pow(c2,2) + 2*rb*rt*cos(gb - gt)*(-1 + pow(c3,2)) - rt*x*cos(gt)*pow(c3,2) - rt*y*cos(gt)*pow(3,0.5)*pow(c3,2) - rb*cos(gb)*(x + y*pow(3,0.5))*(1 + pow(c1,2) + pow(c2,2) + pow(c3,2)) - pow(l1,2) - pow(c1,2)*pow(l1,2) - pow(c2,2)*pow(l1,2) - pow(c3,2)*pow(l1,2) + pow(rb,2) + pow(c1,2)*pow(rb,2) + pow(c2,2)*pow(rb,2) + pow(c3,2)*pow(rb,2) + pow(rt,2) + pow(c1,2)*pow(rt,2) + pow(c2,2)*pow(rt,2) + pow(c3,2)*pow(rt,2) + pow(x,2) + pow(c1,2)*pow(x,2) + pow(c2,2)*pow(x,2) + pow(c3,2)*pow(x,2) + pow(y,2) + pow(c1,2)*pow(y,2) + pow(c2,2)*pow(y,2) + pow(c3,2)*pow(y,2) + pow(z,2) + pow(c1,2)*pow(z,2) + pow(c2,2)*pow(z,2) + pow(c3,2)*pow(z,2) + rb*y*sin(gb) - rb*x*pow(3,0.5)*sin(gb) + rb*y*pow(c1,2)*sin(gb) - rb*x*pow(3,0.5)*pow(c1,2)*sin(gb) + rb*y*pow(c2,2)*sin(gb) - rb*x*pow(3,0.5)*pow(c2,2)*sin(gb) + rb*y*pow(c3,2)*sin(gb) - rb*x*pow(3,0.5)*pow(c3,2)*sin(gb) + 4*c3*rb*rt*sin(gb - gt) - 2*c1*c2*rt*x*sin(gt) + 2*c3*rt*x*sin(gt) - rt*y*sin(gt) - 2*c1*rt*z*sin(gt) - 2*c2*c3*rt*z*sin(gt) + rt*x*pow(3,0.5)*sin(gt) + 2*c1*c2*rt*y*pow(3,0.5)*sin(gt) + 2*c3*rt*y*pow(3,0.5)*sin(gt) - 2*c2*rt*z*pow(3,0.5)*sin(gt) + 2*c1*c3*rt*z*pow(3,0.5)*sin(gt) + rt*y*pow(c1,2)*sin(gt) + rt*x*pow(3,0.5)*pow(c1,2)*sin(gt) - rt*y*pow(c2,2)*sin(gt) - rt*x*pow(3,0.5)*pow(c2,2)*sin(gt) + rt*y*pow(c3,2)*sin(gt) - rt*x*pow(3,0.5)*pow(c3,2)*sin(gt) - 2*c1*c2*rb*rt*sin(gb + gt) - rb*rt*pow(3,0.5)*pow(c1,2)*sin(gb + gt) + rb*rt*pow(3,0.5)*pow(c2,2)*sin(gb + gt), rt*x*cos(gt) + 2*c1*c2*rt*y*cos(gt) + 2*c3*rt*y*cos(gt) - 2*c2*rt*z*cos(gt) + 2*c1*c3*rt*z*cos(gt) + 2*c1*c2*rt*x*cos(gt)*pow(3,0.5) - 2*c3*rt*x*cos(gt)*pow(3,0.5) + rt*y*cos(gt)*pow(3,0.5) + 2*c1*rt*z*cos(gt)*pow(3,0.5) + 2*c2*c3*rt*z*cos(gt)*pow(3,0.5) - 2*c1*c2*rb*rt*cos(gb + gt)*pow(3,0.5) + rt*x*cos(gt)*pow(c1,2) + rb*rt*cos(gb + gt)*pow(c1,2) - rt*y*cos(gt)*pow(3,0.5)*pow(c1,2) - rt*x*cos(gt)*pow(c2,2) - rb*rt*cos(gb + gt)*pow(c2,2) + rt*y*cos(gt)*pow(3,0.5)*pow(c2,2) + 2*rb*rt*cos(gb - gt)*(-1 + pow(c3,2)) - rt*x*cos(gt)*pow(c3,2) - rt*y*cos(gt)*pow(3,0.5)*pow(c3,2) - rb*cos(gb)*(x + y*pow(3,0.5))*(1 + pow(c1,2) + pow(c2,2) + pow(c3,2)) - pow(l2,2) - pow(c1,2)*pow(l2,2) - pow(c2,2)*pow(l2,2) - pow(c3,2)*pow(l2,2) + pow(rb,2) + pow(c1,2)*pow(rb,2) + pow(c2,2)*pow(rb,2) + pow(c3,2)*pow(rb,2) + pow(rt,2) + pow(c1,2)*pow(rt,2) + pow(c2,2)*pow(rt,2) + pow(c3,2)*pow(rt,2) + pow(x,2) + pow(c1,2)*pow(x,2) + pow(c2,2)*pow(x,2) + pow(c3,2)*pow(x,2) + pow(y,2) + pow(c1,2)*pow(y,2) + pow(c2,2)*pow(y,2) + pow(c3,2)*pow(y,2) + pow(z,2) + pow(c1,2)*pow(z,2) + pow(c2,2)*pow(z,2) + pow(c3,2)*pow(z,2) - rb*y*sin(gb) + rb*x*pow(3,0.5)*sin(gb) - rb*y*pow(c1,2)*sin(gb) + rb*x*pow(3,0.5)*pow(c1,2)*sin(gb) - rb*y*pow(c2,2)*sin(gb) + rb*x*pow(3,0.5)*pow(c2,2)*sin(gb) - rb*y*pow(c3,2)*sin(gb) + rb*x*pow(3,0.5)*pow(c3,2)*sin(gb) - 4*c3*rb*rt*sin(gb - gt) + 2*c1*c2*rt*x*sin(gt) - 2*c3*rt*x*sin(gt) + rt*y*sin(gt) + 2*c1*rt*z*sin(gt) + 2*c2*c3*rt*z*sin(gt) - rt*x*pow(3,0.5)*sin(gt) - 2*c1*c2*rt*y*pow(3,0.5)*sin(gt) - 2*c3*rt*y*pow(3,0.5)*sin(gt) + 2*c2*rt*z*pow(3,0.5)*sin(gt) - 2*c1*c3*rt*z*pow(3,0.5)*sin(gt) - rt*y*pow(c1,2)*sin(gt) - rt*x*pow(3,0.5)*pow(c1,2)*sin(gt) + rt*y*pow(c2,2)*sin(gt) + rt*x*pow(3,0.5)*pow(c2,2)*sin(gt) - rt*y*pow(c3,2)*sin(gt) + rt*x*pow(3,0.5)*pow(c3,2)*sin(gt) + 2*c1*c2*rb*rt*sin(gb + gt) + rb*rt*pow(3,0.5)*pow(c1,2)*sin(gb + gt) - rb*rt*pow(3,0.5)*pow(c2,2)*sin(gb + gt), -2*rt*x*cos(gt) - 4*c1*c2*rt*y*cos(gt) - 4*c3*rt*y*cos(gt) + 4*c2*rt*z*cos(gt) - 4*c1*c3*rt*z*cos(gt) - 2*rt*x*cos(gt)*pow(c1,2) - 2*rb*rt*cos(gb + gt)*pow(c1,2) + 2*rt*x*cos(gt)*pow(c2,2) + 2*rb*rt*cos(gb + gt)*pow(c2,2) + 2*rb*rt*cos(gb - gt)*(-1 + pow(c3,2)) + 2*rt*x*cos(gt)*pow(c3,2) + 2*rb*x*cos(gb)*(1 + pow(c1,2) + pow(c2,2) + pow(c3,2)) - pow(l3,2) - pow(c1,2)*pow(l3,2) - pow(c2,2)*pow(l3,2) - pow(c3,2)*pow(l3,2) + pow(rb,2) + pow(c1,2)*pow(rb,2) + pow(c2,2)*pow(rb,2) + pow(c3,2)*pow(rb,2) + pow(rt,2) + pow(c1,2)*pow(rt,2) + pow(c2,2)*pow(rt,2) + pow(c3,2)*pow(rt,2) + pow(x,2) + pow(c1,2)*pow(x,2) + pow(c2,2)*pow(x,2) + pow(c3,2)*pow(x,2) + pow(y,2) + pow(c1,2)*pow(y,2) + pow(c2,2)*pow(y,2) + pow(c3,2)*pow(y,2) + pow(z,2) + pow(c1,2)*pow(z,2) + pow(c2,2)*pow(z,2) + pow(c3,2)*pow(z,2) - 2*rb*y*sin(gb) - 2*rb*y*pow(c1,2)*sin(gb) - 2*rb*y*pow(c2,2)*sin(gb) - 2*rb*y*pow(c3,2)*sin(gb) + 4*c3*rb*rt*sin(gb - gt) + 4*c1*c2*rt*x*sin(gt) - 4*c3*rt*x*sin(gt) + 2*rt*y*sin(gt) + 4*c1*rt*z*sin(gt) + 4*c2*c3*rt*z*sin(gt) - 2*rt*y*pow(c1,2)*sin(gt) + 2*rt*y*pow(c2,2)*sin(gt) - 2*rt*y*pow(c3,2)*sin(gt) + 4*c1*c2*rb*rt*sin(gb + gt), -2*rt*x*cos(gt) - 4*c1*c2*rt*y*cos(gt) - 4*c3*rt*y*cos(gt) + 4*c2*rt*z*cos(gt) - 4*c1*c3*rt*z*cos(gt) - 2*rt*x*cos(gt)*pow(c1,2) - 2*rb*rt*cos(gb + gt)*pow(c1,2) + 2*rt*x*cos(gt)*pow(c2,2) + 2*rb*rt*cos(gb + gt)*pow(c2,2) + 2*rb*rt*cos(gb - gt)*(-1 + pow(c3,2)) + 2*rt*x*cos(gt)*pow(c3,2) + 2*rb*x*cos(gb)*(1 + pow(c1,2) + pow(c2,2) + pow(c3,2)) - pow(l4,2) - pow(c1,2)*pow(l4,2) - pow(c2,2)*pow(l4,2) - pow(c3,2)*pow(l4,2) + pow(rb,2) + pow(c1,2)*pow(rb,2) + pow(c2,2)*pow(rb,2) + pow(c3,2)*pow(rb,2) + pow(rt,2) + pow(c1,2)*pow(rt,2) + pow(c2,2)*pow(rt,2) + pow(c3,2)*pow(rt,2) + pow(x,2) + pow(c1,2)*pow(x,2) + pow(c2,2)*pow(x,2) + pow(c3,2)*pow(x,2) + pow(y,2) + pow(c1,2)*pow(y,2) + pow(c2,2)*pow(y,2) + pow(c3,2)*pow(y,2) + pow(z,2) + pow(c1,2)*pow(z,2) + pow(c2,2)*pow(z,2) + pow(c3,2)*pow(z,2) + 2*rb*y*sin(gb) + 2*rb*y*pow(c1,2)*sin(gb) + 2*rb*y*pow(c2,2)*sin(gb) + 2*rb*y*pow(c3,2)*sin(gb) - 4*c3*rb*rt*sin(gb - gt) - 4*c1*c2*rt*x*sin(gt) + 4*c3*rt*x*sin(gt) - 2*rt*y*sin(gt) - 4*c1*rt*z*sin(gt) - 4*c2*c3*rt*z*sin(gt) + 2*rt*y*pow(c1,2)*sin(gt) - 2*rt*y*pow(c2,2)*sin(gt) + 2*rt*y*pow(c3,2)*sin(gt) - 4*c1*c2*rb*rt*sin(gb + gt), rt*x*cos(gt) + 2*c1*c2*rt*y*cos(gt) + 2*c3*rt*y*cos(gt) - 2*c2*rt*z*cos(gt) + 2*c1*c3*rt*z*cos(gt) - 2*c1*c2*rt*x*cos(gt)*pow(3,0.5) + 2*c3*rt*x*cos(gt)*pow(3,0.5) - rt*y*cos(gt)*pow(3,0.5) - 2*c1*rt*z*cos(gt)*pow(3,0.5) - 2*c2*c3*rt*z*cos(gt)*pow(3,0.5) + 2*c1*c2*rb*rt*cos(gb + gt)*pow(3,0.5) + rt*x*cos(gt)*pow(c1,2) + rb*rt*cos(gb + gt)*pow(c1,2) + rt*y*cos(gt)*pow(3,0.5)*pow(c1,2) - rt*x*cos(gt)*pow(c2,2) - rb*rt*cos(gb + gt)*pow(c2,2) - rt*y*cos(gt)*pow(3,0.5)*pow(c2,2) + 2*rb*rt*cos(gb - gt)*(-1 + pow(c3,2)) - rt*x*cos(gt)*pow(c3,2) + rt*y*cos(gt)*pow(3,0.5)*pow(c3,2) - rb*cos(gb)*(x - y*pow(3,0.5))*(1 + pow(c1,2) + pow(c2,2) + pow(c3,2)) - pow(l5,2) - pow(c1,2)*pow(l5,2) - pow(c2,2)*pow(l5,2) - pow(c3,2)*pow(l5,2) + pow(rb,2) + pow(c1,2)*pow(rb,2) + pow(c2,2)*pow(rb,2) + pow(c3,2)*pow(rb,2) + pow(rt,2) + pow(c1,2)*pow(rt,2) + pow(c2,2)*pow(rt,2) + pow(c3,2)*pow(rt,2) + pow(x,2) + pow(c1,2)*pow(x,2) + pow(c2,2)*pow(x,2) + pow(c3,2)*pow(x,2) + pow(y,2) + pow(c1,2)*pow(y,2) + pow(c2,2)*pow(y,2) + pow(c3,2)*pow(y,2) + pow(z,2) + pow(c1,2)*pow(z,2) + pow(c2,2)*pow(z,2) + pow(c3,2)*pow(z,2) + rb*y*sin(gb) + rb*x*pow(3,0.5)*sin(gb) + rb*y*pow(c1,2)*sin(gb) + rb*x*pow(3,0.5)*pow(c1,2)*sin(gb) + rb*y*pow(c2,2)*sin(gb) + rb*x*pow(3,0.5)*pow(c2,2)*sin(gb) + rb*y*pow(c3,2)*sin(gb) + rb*x*pow(3,0.5)*pow(c3,2)*sin(gb) + 4*c3*rb*rt*sin(gb - gt) - 2*c1*c2*rt*x*sin(gt) + 2*c3*rt*x*sin(gt) - rt*y*sin(gt) - 2*c1*rt*z*sin(gt) - 2*c2*c3*rt*z*sin(gt) - rt*x*pow(3,0.5)*sin(gt) - 2*c1*c2*rt*y*pow(3,0.5)*sin(gt) - 2*c3*rt*y*pow(3,0.5)*sin(gt) + 2*c2*rt*z*pow(3,0.5)*sin(gt) - 2*c1*c3*rt*z*pow(3,0.5)*sin(gt) + rt*y*pow(c1,2)*sin(gt) - rt*x*pow(3,0.5)*pow(c1,2)*sin(gt) - rt*y*pow(c2,2)*sin(gt) + rt*x*pow(3,0.5)*pow(c2,2)*sin(gt) + rt*y*pow(c3,2)*sin(gt) + rt*x*pow(3,0.5)*pow(c3,2)*sin(gt) - 2*c1*c2*rb*rt*sin(gb + gt) + rb*rt*pow(3,0.5)*pow(c1,2)*sin(gb + gt) - rb*rt*pow(3,0.5)*pow(c2,2)*sin(gb + gt), rt*x*cos(gt) + 2*c1*c2*rt*y*cos(gt) + 2*c3*rt*y*cos(gt) - 2*c2*rt*z*cos(gt) + 2*c1*c3*rt*z*cos(gt) - 2*c1*c2*rt*x*cos(gt)*pow(3,0.5) + 2*c3*rt*x*cos(gt)*pow(3,0.5) - rt*y*cos(gt)*pow(3,0.5) - 2*c1*rt*z*cos(gt)*pow(3,0.5) - 2*c2*c3*rt*z*cos(gt)*pow(3,0.5) + 2*c1*c2*rb*rt*cos(gb + gt)*pow(3,0.5) + rt*x*cos(gt)*pow(c1,2) + rb*rt*cos(gb + gt)*pow(c1,2) + rt*y*cos(gt)*pow(3,0.5)*pow(c1,2) - rt*x*cos(gt)*pow(c2,2) - rb*rt*cos(gb + gt)*pow(c2,2) - rt*y*cos(gt)*pow(3,0.5)*pow(c2,2) + 2*rb*rt*cos(gb - gt)*(-1 + pow(c3,2)) - rt*x*cos(gt)*pow(c3,2) + rt*y*cos(gt)*pow(3,0.5)*pow(c3,2) - rb*cos(gb)*(x - y*pow(3,0.5))*(1 + pow(c1,2) + pow(c2,2) + pow(c3,2)) - pow(l6,2) - pow(c1,2)*pow(l6,2) - pow(c2,2)*pow(l6,2) - pow(c3,2)*pow(l6,2) + pow(rb,2) + pow(c1,2)*pow(rb,2) + pow(c2,2)*pow(rb,2) + pow(c3,2)*pow(rb,2) + pow(rt,2) + pow(c1,2)*pow(rt,2) + pow(c2,2)*pow(rt,2) + pow(c3,2)*pow(rt,2) + pow(x,2) + pow(c1,2)*pow(x,2) + pow(c2,2)*pow(x,2) + pow(c3,2)*pow(x,2) + pow(y,2) + pow(c1,2)*pow(y,2) + pow(c2,2)*pow(y,2) + pow(c3,2)*pow(y,2) + pow(z,2) + pow(c1,2)*pow(z,2) + pow(c2,2)*pow(z,2) + pow(c3,2)*pow(z,2) - rb*y*sin(gb) - rb*x*pow(3,0.5)*sin(gb) - rb*y*pow(c1,2)*sin(gb) - rb*x*pow(3,0.5)*pow(c1,2)*sin(gb) - rb*y*pow(c2,2)*sin(gb) - rb*x*pow(3,0.5)*pow(c2,2)*sin(gb) - rb*y*pow(c3,2)*sin(gb) - rb*x*pow(3,0.5)*pow(c3,2)*sin(gb) - 4*c3*rb*rt*sin(gb - gt) + 2*c1*c2*rt*x*sin(gt) - 2*c3*rt*x*sin(gt) + rt*y*sin(gt) + 2*c1*rt*z*sin(gt) + 2*c2*c3*rt*z*sin(gt) + rt*x*pow(3,0.5)*sin(gt) + 2*c1*c2*rt*y*pow(3,0.5)*sin(gt) + 2*c3*rt*y*pow(3,0.5)*sin(gt) - 2*c2*rt*z*pow(3,0.5)*sin(gt) + 2*c1*c3*rt*z*pow(3,0.5)*sin(gt) - rt*y*pow(c1,2)*sin(gt) + rt*x*pow(3,0.5)*pow(c1,2)*sin(gt) + rt*y*pow(c2,2)*sin(gt) - rt*x*pow(3,0.5)*pow(c2,2)*sin(gt) - rt*y*pow(c3,2)*sin(gt) - rt*x*pow(3,0.5)*pow(c3,2)*sin(gt) + 2*c1*c2*rb*rt*sin(gb + gt) - rb*rt*pow(3,0.5)*pow(c1,2)*sin(gb + gt) + rb*rt*pow(3,0.5)*pow(c2,2)*sin(gb + gt);

  return etaval;
}

MatrixXd Jetaphi(VectorXd qvals){
  double rb=1.00, rt=5803.00/10000.00, gt =6573.00/10000.00, gb= 597.00/2000.00;
  double x=qvals(0),y=qvals(1),z=qvals(2),c1=qvals(3),c2=qvals(4),c3=qvals(5),l1=qvals(6),l2=qvals(7),l3=qvals(8),l4=qvals(9),l5=qvals(10),l6=qvals(11);

  MatrixXd Jetaphival(6,6);

  Jetaphival<< 2*x + rt*cos(gt) + 2*c1*c2*rt*cos(gt)*pow(3,0.5) - 2*c3*rt*cos(gt)*pow(3,0.5) + 2*x*pow(c1,2) + rt*cos(gt)*pow(c1,2) + 2*x*pow(c2,2) - rt*cos(gt)*pow(c2,2) + 2*x*pow(c3,2) - rt*cos(gt)*pow(c3,2) - rb*cos(gb)*(1 + pow(c1,2) + pow(c2,2) + pow(c3,2)) - rb*pow(3,0.5)*sin(gb) - rb*pow(3,0.5)*pow(c1,2)*sin(gb) - rb*pow(3,0.5)*pow(c2,2)*sin(gb) - rb*pow(3,0.5)*pow(c3,2)*sin(gb) - 2*c1*c2*rt*sin(gt) + 2*c3*rt*sin(gt) + rt*pow(3,0.5)*sin(gt) + rt*pow(3,0.5)*pow(c1,2)*sin(gt) - rt*pow(3,0.5)*pow(c2,2)*sin(gt) - rt*pow(3,0.5)*pow(c3,2)*sin(gt), 2*y + 2*c1*c2*rt*cos(gt) + 2*c3*rt*cos(gt) + rt*cos(gt)*pow(3,0.5) + 2*y*pow(c1,2) - rt*cos(gt)*pow(3,0.5)*pow(c1,2) + 2*y*pow(c2,2) + rt*cos(gt)*pow(3,0.5)*pow(c2,2) + 2*y*pow(c3,2) - rt*cos(gt)*pow(3,0.5)*pow(c3,2) - rb*cos(gb)*pow(3,0.5)*(1 + pow(c1,2) + pow(c2,2) + pow(c3,2)) + rb*sin(gb) + rb*pow(c1,2)*sin(gb) + rb*pow(c2,2)*sin(gb) + rb*pow(c3,2)*sin(gb) - rt*sin(gt) + 2*c1*c2*rt*pow(3,0.5)*sin(gt) + 2*c3*rt*pow(3,0.5)*sin(gt) + rt*pow(c1,2)*sin(gt) - rt*pow(c2,2)*sin(gt) + rt*pow(c3,2)*sin(gt), 2*z - 2*c2*rt*cos(gt) + 2*c1*c3*rt*cos(gt) + 2*c1*rt*cos(gt)*pow(3,0.5) + 2*c2*c3*rt*cos(gt)*pow(3,0.5) + 2*z*pow(c1,2) + 2*z*pow(c2,2) + 2*z*pow(c3,2) - 2*c1*rt*sin(gt) - 2*c2*c3*rt*sin(gt) - 2*c2*rt*pow(3,0.5)*sin(gt) + 2*c1*c3*rt*pow(3,0.5)*sin(gt), 2*c1*rt*x*cos(gt) + 2*c2*rt*y*cos(gt) + 2*c3*rt*z*cos(gt) + 2*c1*rb*rt*cos(gb + gt) + 2*c2*rt*x*cos(gt)*pow(3,0.5) - 2*c1*rt*y*cos(gt)*pow(3,0.5) + 2*rt*z*cos(gt)*pow(3,0.5) - 2*c2*rb*rt*cos(gb + gt)*pow(3,0.5) - 2*c1*rb*cos(gb)*(x + y*pow(3,0.5)) - 2*c1*pow(l1,2) + 2*c1*pow(rb,2) + 2*c1*pow(rt,2) + 2*c1*pow(x,2) + 2*c1*pow(y,2) + 2*c1*pow(z,2) + 2*c1*rb*y*sin(gb) - 2*c1*rb*x*pow(3,0.5)*sin(gb) - 2*c2*rt*x*sin(gt) + 2*c1*rt*y*sin(gt) - 2*rt*z*sin(gt) + 2*c1*rt*x*pow(3,0.5)*sin(gt) + 2*c2*rt*y*pow(3,0.5)*sin(gt) + 2*c3*rt*z*pow(3,0.5)*sin(gt) - 2*c2*rb*rt*sin(gb + gt) - 2*c1*rb*rt*pow(3,0.5)*sin(gb + gt), -2*c2*rt*x*cos(gt) + 2*c1*rt*y*cos(gt) - 2*rt*z*cos(gt) - 2*c2*rb*rt*cos(gb + gt) + 2*c1*rt*x*cos(gt)*pow(3,0.5) + 2*c2*rt*y*cos(gt)*pow(3,0.5) + 2*c3*rt*z*cos(gt)*pow(3,0.5) - 2*c1*rb*rt*cos(gb + gt)*pow(3,0.5) - 2*c2*rb*cos(gb)*(x + y*pow(3,0.5)) - 2*c2*pow(l1,2) + 2*c2*pow(rb,2) + 2*c2*pow(rt,2) + 2*c2*pow(x,2) + 2*c2*pow(y,2) + 2*c2*pow(z,2) + 2*c2*rb*y*sin(gb) - 2*c2*rb*x*pow(3,0.5)*sin(gb) - 2*c1*rt*x*sin(gt) - 2*c2*rt*y*sin(gt) - 2*c3*rt*z*sin(gt) - 2*c2*rt*x*pow(3,0.5)*sin(gt) + 2*c1*rt*y*pow(3,0.5)*sin(gt) - 2*rt*z*pow(3,0.5)*sin(gt) - 2*c1*rb*rt*sin(gb + gt) + 2*c2*rb*rt*pow(3,0.5)*sin(gb + gt), 4*c3*rb*rt*cos(gb - gt) - 2*c3*rt*x*cos(gt) + 2*rt*y*cos(gt) + 2*c1*rt*z*cos(gt) - 2*rt*x*cos(gt)*pow(3,0.5) - 2*c3*rt*y*cos(gt)*pow(3,0.5) + 2*c2*rt*z*cos(gt)*pow(3,0.5) - 2*c3*rb*cos(gb)*(x + y*pow(3,0.5)) - 2*c3*pow(l1,2) + 2*c3*pow(rb,2) + 2*c3*pow(rt,2) + 2*c3*pow(x,2) + 2*c3*pow(y,2) + 2*c3*pow(z,2) + 2*c3*rb*y*sin(gb) - 2*c3*rb*x*pow(3,0.5)*sin(gb) + 4*rb*rt*sin(gb - gt) + 2*rt*x*sin(gt) + 2*c3*rt*y*sin(gt) - 2*c2*rt*z*sin(gt) - 2*c3*rt*x*pow(3,0.5)*sin(gt) + 2*rt*y*pow(3,0.5)*sin(gt) + 2*c1*rt*z*pow(3,0.5)*sin(gt), 2*x + rt*cos(gt) + 2*c1*c2*rt*cos(gt)*pow(3,0.5) - 2*c3*rt*cos(gt)*pow(3,0.5) + 2*x*pow(c1,2) + rt*cos(gt)*pow(c1,2) + 2*x*pow(c2,2) - rt*cos(gt)*pow(c2,2) + 2*x*pow(c3,2) - rt*cos(gt)*pow(c3,2) - rb*cos(gb)*(1 + pow(c1,2) + pow(c2,2) + pow(c3,2)) + rb*pow(3,0.5)*sin(gb) + rb*pow(3,0.5)*pow(c1,2)*sin(gb) + rb*pow(3,0.5)*pow(c2,2)*sin(gb) + rb*pow(3,0.5)*pow(c3,2)*sin(gb) + 2*c1*c2*rt*sin(gt) - 2*c3*rt*sin(gt) - rt*pow(3,0.5)*sin(gt) - rt*pow(3,0.5)*pow(c1,2)*sin(gt) + rt*pow(3,0.5)*pow(c2,2)*sin(gt) + rt*pow(3,0.5)*pow(c3,2)*sin(gt), 2*y + 2*c1*c2*rt*cos(gt) + 2*c3*rt*cos(gt) + rt*cos(gt)*pow(3,0.5) + 2*y*pow(c1,2) - rt*cos(gt)*pow(3,0.5)*pow(c1,2) + 2*y*pow(c2,2) + rt*cos(gt)*pow(3,0.5)*pow(c2,2) + 2*y*pow(c3,2) - rt*cos(gt)*pow(3,0.5)*pow(c3,2) - rb*cos(gb)*pow(3,0.5)*(1 + pow(c1,2) + pow(c2,2) + pow(c3,2)) - rb*sin(gb) - rb*pow(c1,2)*sin(gb) - rb*pow(c2,2)*sin(gb) - rb*pow(c3,2)*sin(gb) + rt*sin(gt) - 2*c1*c2*rt*pow(3,0.5)*sin(gt) - 2*c3*rt*pow(3,0.5)*sin(gt) - rt*pow(c1,2)*sin(gt) + rt*pow(c2,2)*sin(gt) - rt*pow(c3,2)*sin(gt), 2*z - 2*c2*rt*cos(gt) + 2*c1*c3*rt*cos(gt) + 2*c1*rt*cos(gt)*pow(3,0.5) + 2*c2*c3*rt*cos(gt)*pow(3,0.5) + 2*z*pow(c1,2) + 2*z*pow(c2,2) + 2*z*pow(c3,2) + 2*c1*rt*sin(gt) + 2*c2*c3*rt*sin(gt) + 2*c2*rt*pow(3,0.5)*sin(gt) - 2*c1*c3*rt*pow(3,0.5)*sin(gt), 2*c1*rt*x*cos(gt) + 2*c2*rt*y*cos(gt) + 2*c3*rt*z*cos(gt) + 2*c1*rb*rt*cos(gb + gt) + 2*c2*rt*x*cos(gt)*pow(3,0.5) - 2*c1*rt*y*cos(gt)*pow(3,0.5) + 2*rt*z*cos(gt)*pow(3,0.5) - 2*c2*rb*rt*cos(gb + gt)*pow(3,0.5) - 2*c1*rb*cos(gb)*(x + y*pow(3,0.5)) - 2*c1*pow(l2,2) + 2*c1*pow(rb,2) + 2*c1*pow(rt,2) + 2*c1*pow(x,2) + 2*c1*pow(y,2) + 2*c1*pow(z,2) - 2*c1*rb*y*sin(gb) + 2*c1*rb*x*pow(3,0.5)*sin(gb) + 2*c2*rt*x*sin(gt) - 2*c1*rt*y*sin(gt) + 2*rt*z*sin(gt) - 2*c1*rt*x*pow(3,0.5)*sin(gt) - 2*c2*rt*y*pow(3,0.5)*sin(gt) - 2*c3*rt*z*pow(3,0.5)*sin(gt) + 2*c2*rb*rt*sin(gb + gt) + 2*c1*rb*rt*pow(3,0.5)*sin(gb + gt), -2*c2*rt*x*cos(gt) + 2*c1*rt*y*cos(gt) - 2*rt*z*cos(gt) - 2*c2*rb*rt*cos(gb + gt) + 2*c1*rt*x*cos(gt)*pow(3,0.5) + 2*c2*rt*y*cos(gt)*pow(3,0.5) + 2*c3*rt*z*cos(gt)*pow(3,0.5) - 2*c1*rb*rt*cos(gb + gt)*pow(3,0.5) - 2*c2*rb*cos(gb)*(x + y*pow(3,0.5)) - 2*c2*pow(l2,2) + 2*c2*pow(rb,2) + 2*c2*pow(rt,2) + 2*c2*pow(x,2) + 2*c2*pow(y,2) + 2*c2*pow(z,2) - 2*c2*rb*y*sin(gb) + 2*c2*rb*x*pow(3,0.5)*sin(gb) + 2*c1*rt*x*sin(gt) + 2*c2*rt*y*sin(gt) + 2*c3*rt*z*sin(gt) + 2*c2*rt*x*pow(3,0.5)*sin(gt) - 2*c1*rt*y*pow(3,0.5)*sin(gt) + 2*rt*z*pow(3,0.5)*sin(gt) + 2*c1*rb*rt*sin(gb + gt) - 2*c2*rb*rt*pow(3,0.5)*sin(gb + gt), 4*c3*rb*rt*cos(gb - gt) - 2*c3*rt*x*cos(gt) + 2*rt*y*cos(gt) + 2*c1*rt*z*cos(gt) - 2*rt*x*cos(gt)*pow(3,0.5) - 2*c3*rt*y*cos(gt)*pow(3,0.5) + 2*c2*rt*z*cos(gt)*pow(3,0.5) - 2*c3*rb*cos(gb)*(x + y*pow(3,0.5)) - 2*c3*pow(l2,2) + 2*c3*pow(rb,2) + 2*c3*pow(rt,2) + 2*c3*pow(x,2) + 2*c3*pow(y,2) + 2*c3*pow(z,2) - 2*c3*rb*y*sin(gb) + 2*c3*rb*x*pow(3,0.5)*sin(gb) - 4*rb*rt*sin(gb - gt) - 2*rt*x*sin(gt) - 2*c3*rt*y*sin(gt) + 2*c2*rt*z*sin(gt) + 2*c3*rt*x*pow(3,0.5)*sin(gt) - 2*rt*y*pow(3,0.5)*sin(gt) - 2*c1*rt*z*pow(3,0.5)*sin(gt), 2*x - 2*rt*cos(gt) + 2*x*pow(c1,2) - 2*rt*cos(gt)*pow(c1,2) + 2*x*pow(c2,2) + 2*rt*cos(gt)*pow(c2,2) + 2*x*pow(c3,2) + 2*rt*cos(gt)*pow(c3,2) + 2*rb*cos(gb)*(1 + pow(c1,2) + pow(c2,2) + pow(c3,2)) + 4*c1*c2*rt*sin(gt) - 4*c3*rt*sin(gt), 2*y - 4*c1*c2*rt*cos(gt) - 4*c3*rt*cos(gt) + 2*y*pow(c1,2) + 2*y*pow(c2,2) + 2*y*pow(c3,2) - 2*rb*sin(gb) - 2*rb*pow(c1,2)*sin(gb) - 2*rb*pow(c2,2)*sin(gb) - 2*rb*pow(c3,2)*sin(gb) + 2*rt*sin(gt) - 2*rt*pow(c1,2)*sin(gt) + 2*rt*pow(c2,2)*sin(gt) - 2*rt*pow(c3,2)*sin(gt), 2*z + 4*c2*rt*cos(gt) - 4*c1*c3*rt*cos(gt) + 2*z*pow(c1,2) + 2*z*pow(c2,2) + 2*z*pow(c3,2) + 4*c1*rt*sin(gt) + 4*c2*c3*rt*sin(gt), 4*c1*rb*x*cos(gb) - 4*c1*rt*x*cos(gt) - 4*c2*rt*y*cos(gt) - 4*c3*rt*z*cos(gt) - 4*c1*rb*rt*cos(gb + gt) - 2*c1*pow(l3,2) + 2*c1*pow(rb,2) + 2*c1*pow(rt,2) + 2*c1*pow(x,2) + 2*c1*pow(y,2) + 2*c1*pow(z,2) - 4*c1*rb*y*sin(gb) + 4*c2*rt*x*sin(gt) - 4*c1*rt*y*sin(gt) + 4*rt*z*sin(gt) + 4*c2*rb*rt*sin(gb + gt), 4*c2*rb*x*cos(gb) + 4*c2*rt*x*cos(gt) - 4*c1*rt*y*cos(gt) + 4*rt*z*cos(gt) + 4*c2*rb*rt*cos(gb + gt) - 2*c2*pow(l3,2) + 2*c2*pow(rb,2) + 2*c2*pow(rt,2) + 2*c2*pow(x,2) + 2*c2*pow(y,2) + 2*c2*pow(z,2) - 4*c2*rb*y*sin(gb) + 4*c1*rt*x*sin(gt) + 4*c2*rt*y*sin(gt) + 4*c3*rt*z*sin(gt) + 4*c1*rb*rt*sin(gb + gt), 4*c3*rb*x*cos(gb) + 4*c3*rb*rt*cos(gb - gt) + 4*c3*rt*x*cos(gt) - 4*rt*y*cos(gt) - 4*c1*rt*z*cos(gt) - 2*c3*pow(l3,2) + 2*c3*pow(rb,2) + 2*c3*pow(rt,2) + 2*c3*pow(x,2) + 2*c3*pow(y,2) + 2*c3*pow(z,2) - 4*c3*rb*y*sin(gb) + 4*rb*rt*sin(gb - gt) - 4*rt*x*sin(gt) - 4*c3*rt*y*sin(gt) + 4*c2*rt*z*sin(gt), 2*x - 2*rt*cos(gt) + 2*x*pow(c1,2) - 2*rt*cos(gt)*pow(c1,2) + 2*x*pow(c2,2) + 2*rt*cos(gt)*pow(c2,2) + 2*x*pow(c3,2) + 2*rt*cos(gt)*pow(c3,2) + 2*rb*cos(gb)*(1 + pow(c1,2) + pow(c2,2) + pow(c3,2)) - 4*c1*c2*rt*sin(gt) + 4*c3*rt*sin(gt), 2*y - 4*c1*c2*rt*cos(gt) - 4*c3*rt*cos(gt) + 2*y*pow(c1,2) + 2*y*pow(c2,2) + 2*y*pow(c3,2) + 2*rb*sin(gb) + 2*rb*pow(c1,2)*sin(gb) + 2*rb*pow(c2,2)*sin(gb) + 2*rb*pow(c3,2)*sin(gb) - 2*rt*sin(gt) + 2*rt*pow(c1,2)*sin(gt) - 2*rt*pow(c2,2)*sin(gt) + 2*rt*pow(c3,2)*sin(gt), 2*z + 4*c2*rt*cos(gt) - 4*c1*c3*rt*cos(gt) + 2*z*pow(c1,2) + 2*z*pow(c2,2) + 2*z*pow(c3,2) - 4*c1*rt*sin(gt) - 4*c2*c3*rt*sin(gt), 4*c1*rb*x*cos(gb) - 4*c1*rt*x*cos(gt) - 4*c2*rt*y*cos(gt) - 4*c3*rt*z*cos(gt) - 4*c1*rb*rt*cos(gb + gt) - 2*c1*pow(l4,2) + 2*c1*pow(rb,2) + 2*c1*pow(rt,2) + 2*c1*pow(x,2) + 2*c1*pow(y,2) + 2*c1*pow(z,2) + 4*c1*rb*y*sin(gb) - 4*c2*rt*x*sin(gt) + 4*c1*rt*y*sin(gt) - 4*rt*z*sin(gt) - 4*c2*rb*rt*sin(gb + gt), 4*c2*rb*x*cos(gb) + 4*c2*rt*x*cos(gt) - 4*c1*rt*y*cos(gt) + 4*rt*z*cos(gt) + 4*c2*rb*rt*cos(gb + gt) - 2*c2*pow(l4,2) + 2*c2*pow(rb,2) + 2*c2*pow(rt,2) + 2*c2*pow(x,2) + 2*c2*pow(y,2) + 2*c2*pow(z,2) + 4*c2*rb*y*sin(gb) - 4*c1*rt*x*sin(gt) - 4*c2*rt*y*sin(gt) - 4*c3*rt*z*sin(gt) - 4*c1*rb*rt*sin(gb + gt), 4*c3*rb*x*cos(gb) + 4*c3*rb*rt*cos(gb - gt) + 4*c3*rt*x*cos(gt) - 4*rt*y*cos(gt) - 4*c1*rt*z*cos(gt) - 2*c3*pow(l4,2) + 2*c3*pow(rb,2) + 2*c3*pow(rt,2) + 2*c3*pow(x,2) + 2*c3*pow(y,2) + 2*c3*pow(z,2) + 4*c3*rb*y*sin(gb) - 4*rb*rt*sin(gb - gt) + 4*rt*x*sin(gt) + 4*c3*rt*y*sin(gt) - 4*c2*rt*z*sin(gt), 2*x + rt*cos(gt) - 2*c1*c2*rt*cos(gt)*pow(3,0.5) + 2*c3*rt*cos(gt)*pow(3,0.5) + 2*x*pow(c1,2) + rt*cos(gt)*pow(c1,2) + 2*x*pow(c2,2) - rt*cos(gt)*pow(c2,2) + 2*x*pow(c3,2) - rt*cos(gt)*pow(c3,2) - rb*cos(gb)*(1 + pow(c1,2) + pow(c2,2) + pow(c3,2)) + rb*pow(3,0.5)*sin(gb) + rb*pow(3,0.5)*pow(c1,2)*sin(gb) + rb*pow(3,0.5)*pow(c2,2)*sin(gb) + rb*pow(3,0.5)*pow(c3,2)*sin(gb) - 2*c1*c2*rt*sin(gt) + 2*c3*rt*sin(gt) - rt*pow(3,0.5)*sin(gt) - rt*pow(3,0.5)*pow(c1,2)*sin(gt) + rt*pow(3,0.5)*pow(c2,2)*sin(gt) + rt*pow(3,0.5)*pow(c3,2)*sin(gt), 2*y + 2*c1*c2*rt*cos(gt) + 2*c3*rt*cos(gt) - rt*cos(gt)*pow(3,0.5) + 2*y*pow(c1,2) + rt*cos(gt)*pow(3,0.5)*pow(c1,2) + 2*y*pow(c2,2) - rt*cos(gt)*pow(3,0.5)*pow(c2,2) + 2*y*pow(c3,2) + rt*cos(gt)*pow(3,0.5)*pow(c3,2) + rb*cos(gb)*pow(3,0.5)*(1 + pow(c1,2) + pow(c2,2) + pow(c3,2)) + rb*sin(gb) + rb*pow(c1,2)*sin(gb) + rb*pow(c2,2)*sin(gb) + rb*pow(c3,2)*sin(gb) - rt*sin(gt) - 2*c1*c2*rt*pow(3,0.5)*sin(gt) - 2*c3*rt*pow(3,0.5)*sin(gt) + rt*pow(c1,2)*sin(gt) - rt*pow(c2,2)*sin(gt) + rt*pow(c3,2)*sin(gt), 2*z - 2*c2*rt*cos(gt) + 2*c1*c3*rt*cos(gt) - 2*c1*rt*cos(gt)*pow(3,0.5) - 2*c2*c3*rt*cos(gt)*pow(3,0.5) + 2*z*pow(c1,2) + 2*z*pow(c2,2) + 2*z*pow(c3,2) - 2*c1*rt*sin(gt) - 2*c2*c3*rt*sin(gt) + 2*c2*rt*pow(3,0.5)*sin(gt) - 2*c1*c3*rt*pow(3,0.5)*sin(gt), 2*c1*rt*x*cos(gt) + 2*c2*rt*y*cos(gt) + 2*c3*rt*z*cos(gt) + 2*c1*rb*rt*cos(gb + gt) - 2*c2*rt*x*cos(gt)*pow(3,0.5) + 2*c1*rt*y*cos(gt)*pow(3,0.5) - 2*rt*z*cos(gt)*pow(3,0.5) + 2*c2*rb*rt*cos(gb + gt)*pow(3,0.5) - 2*c1*rb*cos(gb)*(x - y*pow(3,0.5)) - 2*c1*pow(l5,2) + 2*c1*pow(rb,2) + 2*c1*pow(rt,2) + 2*c1*pow(x,2) + 2*c1*pow(y,2) + 2*c1*pow(z,2) + 2*c1*rb*y*sin(gb) + 2*c1*rb*x*pow(3,0.5)*sin(gb) - 2*c2*rt*x*sin(gt) + 2*c1*rt*y*sin(gt) - 2*rt*z*sin(gt) - 2*c1*rt*x*pow(3,0.5)*sin(gt) - 2*c2*rt*y*pow(3,0.5)*sin(gt) - 2*c3*rt*z*pow(3,0.5)*sin(gt) - 2*c2*rb*rt*sin(gb + gt) + 2*c1*rb*rt*pow(3,0.5)*sin(gb + gt), -2*c2*rt*x*cos(gt) + 2*c1*rt*y*cos(gt) - 2*rt*z*cos(gt) - 2*c2*rb*rt*cos(gb + gt) - 2*c1*rt*x*cos(gt)*pow(3,0.5) - 2*c2*rt*y*cos(gt)*pow(3,0.5) - 2*c3*rt*z*cos(gt)*pow(3,0.5) + 2*c1*rb*rt*cos(gb + gt)*pow(3,0.5) - 2*c2*rb*cos(gb)*(x - y*pow(3,0.5)) - 2*c2*pow(l5,2) + 2*c2*pow(rb,2) + 2*c2*pow(rt,2) + 2*c2*pow(x,2) + 2*c2*pow(y,2) + 2*c2*pow(z,2) + 2*c2*rb*y*sin(gb) + 2*c2*rb*x*pow(3,0.5)*sin(gb) - 2*c1*rt*x*sin(gt) - 2*c2*rt*y*sin(gt) - 2*c3*rt*z*sin(gt) + 2*c2*rt*x*pow(3,0.5)*sin(gt) - 2*c1*rt*y*pow(3,0.5)*sin(gt) + 2*rt*z*pow(3,0.5)*sin(gt) - 2*c1*rb*rt*sin(gb + gt) - 2*c2*rb*rt*pow(3,0.5)*sin(gb + gt), 4*c3*rb*rt*cos(gb - gt) - 2*c3*rt*x*cos(gt) + 2*rt*y*cos(gt) + 2*c1*rt*z*cos(gt) + 2*rt*x*cos(gt)*pow(3,0.5) + 2*c3*rt*y*cos(gt)*pow(3,0.5) - 2*c2*rt*z*cos(gt)*pow(3,0.5) - 2*c3*rb*cos(gb)*(x - y*pow(3,0.5)) - 2*c3*pow(l5,2) + 2*c3*pow(rb,2) + 2*c3*pow(rt,2) + 2*c3*pow(x,2) + 2*c3*pow(y,2) + 2*c3*pow(z,2) + 2*c3*rb*y*sin(gb) + 2*c3*rb*x*pow(3,0.5)*sin(gb) + 4*rb*rt*sin(gb - gt) + 2*rt*x*sin(gt) + 2*c3*rt*y*sin(gt) - 2*c2*rt*z*sin(gt) + 2*c3*rt*x*pow(3,0.5)*sin(gt) - 2*rt*y*pow(3,0.5)*sin(gt) - 2*c1*rt*z*pow(3,0.5)*sin(gt), 2*x + rt*cos(gt) - 2*c1*c2*rt*cos(gt)*pow(3,0.5) + 2*c3*rt*cos(gt)*pow(3,0.5) + 2*x*pow(c1,2) + rt*cos(gt)*pow(c1,2) + 2*x*pow(c2,2) - rt*cos(gt)*pow(c2,2) + 2*x*pow(c3,2) - rt*cos(gt)*pow(c3,2) - rb*cos(gb)*(1 + pow(c1,2) + pow(c2,2) + pow(c3,2)) - rb*pow(3,0.5)*sin(gb) - rb*pow(3,0.5)*pow(c1,2)*sin(gb) - rb*pow(3,0.5)*pow(c2,2)*sin(gb) - rb*pow(3,0.5)*pow(c3,2)*sin(gb) + 2*c1*c2*rt*sin(gt) - 2*c3*rt*sin(gt) + rt*pow(3,0.5)*sin(gt) + rt*pow(3,0.5)*pow(c1,2)*sin(gt) - rt*pow(3,0.5)*pow(c2,2)*sin(gt) - rt*pow(3,0.5)*pow(c3,2)*sin(gt), 2*y + 2*c1*c2*rt*cos(gt) + 2*c3*rt*cos(gt) - rt*cos(gt)*pow(3,0.5) + 2*y*pow(c1,2) + rt*cos(gt)*pow(3,0.5)*pow(c1,2) + 2*y*pow(c2,2) - rt*cos(gt)*pow(3,0.5)*pow(c2,2) + 2*y*pow(c3,2) + rt*cos(gt)*pow(3,0.5)*pow(c3,2) + rb*cos(gb)*pow(3,0.5)*(1 + pow(c1,2) + pow(c2,2) + pow(c3,2)) - rb*sin(gb) - rb*pow(c1,2)*sin(gb) - rb*pow(c2,2)*sin(gb) - rb*pow(c3,2)*sin(gb) + rt*sin(gt) + 2*c1*c2*rt*pow(3,0.5)*sin(gt) + 2*c3*rt*pow(3,0.5)*sin(gt) - rt*pow(c1,2)*sin(gt) + rt*pow(c2,2)*sin(gt) - rt*pow(c3,2)*sin(gt), 2*z - 2*c2*rt*cos(gt) + 2*c1*c3*rt*cos(gt) - 2*c1*rt*cos(gt)*pow(3,0.5) - 2*c2*c3*rt*cos(gt)*pow(3,0.5) + 2*z*pow(c1,2) + 2*z*pow(c2,2) + 2*z*pow(c3,2) + 2*c1*rt*sin(gt) + 2*c2*c3*rt*sin(gt) - 2*c2*rt*pow(3,0.5)*sin(gt) + 2*c1*c3*rt*pow(3,0.5)*sin(gt), 2*c1*rt*x*cos(gt) + 2*c2*rt*y*cos(gt) + 2*c3*rt*z*cos(gt) + 2*c1*rb*rt*cos(gb + gt) - 2*c2*rt*x*cos(gt)*pow(3,0.5) + 2*c1*rt*y*cos(gt)*pow(3,0.5) - 2*rt*z*cos(gt)*pow(3,0.5) + 2*c2*rb*rt*cos(gb + gt)*pow(3,0.5) - 2*c1*rb*cos(gb)*(x - y*pow(3,0.5)) - 2*c1*pow(l6,2) + 2*c1*pow(rb,2) + 2*c1*pow(rt,2) + 2*c1*pow(x,2) + 2*c1*pow(y,2) + 2*c1*pow(z,2) - 2*c1*rb*y*sin(gb) - 2*c1*rb*x*pow(3,0.5)*sin(gb) + 2*c2*rt*x*sin(gt) - 2*c1*rt*y*sin(gt) + 2*rt*z*sin(gt) + 2*c1*rt*x*pow(3,0.5)*sin(gt) + 2*c2*rt*y*pow(3,0.5)*sin(gt) + 2*c3*rt*z*pow(3,0.5)*sin(gt) + 2*c2*rb*rt*sin(gb + gt) - 2*c1*rb*rt*pow(3,0.5)*sin(gb + gt), -2*c2*rt*x*cos(gt) + 2*c1*rt*y*cos(gt) - 2*rt*z*cos(gt) - 2*c2*rb*rt*cos(gb + gt) - 2*c1*rt*x*cos(gt)*pow(3,0.5) - 2*c2*rt*y*cos(gt)*pow(3,0.5) - 2*c3*rt*z*cos(gt)*pow(3,0.5) + 2*c1*rb*rt*cos(gb + gt)*pow(3,0.5) - 2*c2*rb*cos(gb)*(x - y*pow(3,0.5)) - 2*c2*pow(l6,2) + 2*c2*pow(rb,2) + 2*c2*pow(rt,2) + 2*c2*pow(x,2) + 2*c2*pow(y,2) + 2*c2*pow(z,2) - 2*c2*rb*y*sin(gb) - 2*c2*rb*x*pow(3,0.5)*sin(gb) + 2*c1*rt*x*sin(gt) + 2*c2*rt*y*sin(gt) + 2*c3*rt*z*sin(gt) - 2*c2*rt*x*pow(3,0.5)*sin(gt) + 2*c1*rt*y*pow(3,0.5)*sin(gt) - 2*rt*z*pow(3,0.5)*sin(gt) + 2*c1*rb*rt*sin(gb + gt) + 2*c2*rb*rt*pow(3,0.5)*sin(gb + gt), 4*c3*rb*rt*cos(gb - gt) - 2*c3*rt*x*cos(gt) + 2*rt*y*cos(gt) + 2*c1*rt*z*cos(gt) + 2*rt*x*cos(gt)*pow(3,0.5) + 2*c3*rt*y*cos(gt)*pow(3,0.5) - 2*c2*rt*z*cos(gt)*pow(3,0.5) - 2*c3*rb*cos(gb)*(x - y*pow(3,0.5)) - 2*c3*pow(l6,2) + 2*c3*pow(rb,2) + 2*c3*pow(rt,2) + 2*c3*pow(x,2) + 2*c3*pow(y,2) + 2*c3*pow(z,2) - 2*c3*rb*y*sin(gb) - 2*c3*rb*x*pow(3,0.5)*sin(gb) - 4*rb*rt*sin(gb - gt) - 2*rt*x*sin(gt) - 2*c3*rt*y*sin(gt) + 2*c2*rt*z*sin(gt) - 2*c3*rt*x*pow(3,0.5)*sin(gt) + 2*rt*y*pow(3,0.5)*sin(gt) + 2*c1*rt*z*pow(3,0.5)*sin(gt);
  return Jetaphival;
}

MatrixXd Jetatheta(VectorXd qvals){
  double rb=1.00, rt=5803.00/10000.00, gt =6573.00/10000.00, gb= 597.00/2000.00;
  double x=qvals(0),y=qvals(1),z=qvals(2),c1=qvals(3),c2=qvals(4),c3=qvals(5),l1=qvals(6),l2=qvals(7),l3=qvals(8),l4=qvals(9),l5=qvals(10),l6=qvals(11);

  MatrixXd Jetathetaval(6,6);
  Jetathetaval << -2*l1 - 2*l1*pow(c1,2) - 2*l1*pow(c2,2) - 2*l1*pow(c3,2), 0, 0, 0, 0, 0, 0, -2*l2 - 2*l2*pow(c1,2) - 2*l2*pow(c2,2) - 2*l2*pow(c3,2), 0, 0, 0, 0, 0, 0, -2*l3 - 2*l3*pow(c1,2) - 2*l3*pow(c2,2) - 2*l3*pow(c3,2), 0, 0, 0, 0, 0, 0, -2*l4 - 2*l4*pow(c1,2) - 2*l4*pow(c2,2) - 2*l4*pow(c3,2), 0, 0, 0, 0, 0, 0, -2*l5 - 2*l5*pow(c1,2) - 2*l5*pow(c2,2) - 2*l5*pow(c3,2), 0, 0, 0, 0, 0, 0, -2*l6 - 2*l6*pow(c1,2) - 2*l6*pow(c2,2) - 2*l6*pow(c3,2);
  return Jetathetaval;
}
